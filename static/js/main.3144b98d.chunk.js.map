{"version":3,"sources":["CheckBoxGroup.js","SearchBox.js","RecipeList.js","SearchResult.js","Container.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["CheckBoxGroup","props","checkBoxes","key","items","hasOwnProperty","push","className","type","value","id","name","onChange","htmlFor","data","require","SearchBox","placeholder","onBlur","handleInputChange","cuisineType","mealType","dishType","health","diet","min","onClick","handleSearch","RecipeList","result","array","i","length","chunk","slice","chunkArray","response","map","index","item","domain","URL","recipe","url","alt","label","src","image","height","width","href","shareAs","rel","target","Math","round","calories","ingredients","hostname","SearchResult","content","error","search","count","config","queryStr","apiUrl","enocdedSearch","recipes","Container","useState","calorieTo","calorieFrom","timeTo","timeFrom","state","setState","prepareRequestParams","appendParam","param","toLowerCase","btoa","getRecipes","a","fetch","then","json","err","prevState","Object","keys","firstKey","useEffect","document","title","event","field","replace","indexOf","checked","splice","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","window","location","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","headers","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3144b98d.chunk.js","sourcesContent":["function CheckBoxGroup(props) {\n\n    const checkBoxes = [];\n\n    for (var key in props.items) {\n        if (props.items.hasOwnProperty(key)) {\n            checkBoxes.push(\n                <div className=\"form-check float-left\" key={key}>\n                    <input type=\"checkbox\" className=\"form-check-input\" value={key} id={key + props.name} name={props.name} onChange={props.onChange} />\n                    <label className=\"form-check-label chkLabel\" htmlFor={key + props.name}>{props.items[key]}</label>\n                </div>\n            );\n        }\n    }\n\n    return (\n        <div className=\"float-left clearfix checkbox-group\">{checkBoxes}</div>\n    );\n}\n\nexport default CheckBoxGroup;","import CheckBoxGroup from \"./CheckBoxGroup\";\n\nconst data = require(\"./data.json\");\n\n/**\n * Search box component\n */\nfunction SearchBox(props) {\n\n    return (\n        <div className=\"justify-content-center mt-3\">\n            <form>\n                <div className=\"col form-group\">\n                    <h3>Find something to cook</h3>\n                    <input type=\"text\" name=\"search\" className=\"form-control\" placeholder=\"e.g salad, soup\" onBlur={props.handleInputChange} />\n                </div>\n                <div className=\"row float-left\">\n                    <h6 className=\"mr-3\">Filters:</h6>\n                    <div className=\"border mr-3 p-1\">\n                        <p className=\"filterLbl\">Cusine:</p>\n                        <CheckBoxGroup items={data.cuisineType} name=\"cuisineType[]\" onChange={props.handleInputChange} />\n                    </div>\n                    <div className=\"border mr-3 p-1\">\n                        <p className=\"filterLbl\">Meal:</p>\n                        <CheckBoxGroup items={data.mealType} name=\"mealType[]\" onChange={props.handleInputChange} />\n                    </div>\n                    <div className=\"border mr-3 p-1\">\n                        <p className=\"filterLbl\">Dish:</p>\n                        <CheckBoxGroup items={data.dishType} name=\"dishType[]\" onChange={props.handleInputChange} />\n                    </div>\n                    <div className=\"border w-health mr-3 p-1\">\n                        <p className=\"filterLbl\">Health:</p>\n                        <CheckBoxGroup items={data.health} name=\"health[]\" onChange={props.handleInputChange} />\n                    </div>\n                    <div className=\"border mr-3 p-1\">\n                        <p className=\"filterLbl\">Diet:</p>\n                        <CheckBoxGroup items={data.diet} name=\"diet[]\" onChange={props.handleInputChange} />\n                    </div>\n                </div>\n                <div className=\"row float-left mt-3\">\n                    <div className=\"input-group\">\n                        <label className=\"col-form-label mr-1\">Calorie</label>\n                        <input type=\"number\" className=\"form-control\" placeholder=\"Start\" min=\"1\" name=\"calorieTo\" onChange={props.handleInputChange} />\n                        <span className=\"input-group-addon\">-</span>\n                        <input type=\"number\" className=\"form-control\" placeholder=\"End\" min=\"1\" name=\"calorieFrom\" onChange={props.handleInputChange} />\n                        <label className=\"col-form-label ml-1 mr-1\">Cooking Time</label>\n                        <input type=\"number\" className=\"form-control\" placeholder=\"Start\" min=\"1\" name=\"timeTo\" onChange={props.handleInputChange} />\n                        <span className=\"input-group-addon\">-</span>\n                        <input type=\"number\" className=\"form-control\" placeholder=\"End\" min=\"1\" name=\"timeFrom\" onChange={props.handleInputChange} />\n                        <input className=\"btn btn-primary ml-3\" type=\"button\" value=\"Search\" onClick={props.handleSearch} />\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n}\n\nexport default SearchBox;","/**\n * Recipe list component\n */\nfunction RecipeList(props) {\n\n    /**\n     * Split's the array in chunks of 5\n     */\n    function chunkArray(array) {\n        let result = [];\n        let size = 5;\n        for (let i = 0; i < array.length; i += size) {\n            let chunk = array.slice(i, i + size);\n            result.push(chunk);\n        }\n        return result;\n    }\n    const result = chunkArray(props.response['hits']);\n\n    return (\n        <div>\n            <div className=\"clearfix\"></div>\n            {result.map((chunk, index) => {\n                return (\n                    <div key={`row${index}`} className=\"row mt-4\">\n                        {chunk.map((item, index) => {\n                            let domain = (new URL(item.recipe.url));\n                            return (\n                                <div key={`recipe${index}`} className=\"border p-2 recipe-box mr-2\">\n                                    <span>\n                                        <img alt={item.recipe.label} src={item.recipe.image} height=\"200\" width=\"200\"/>\n                                    </span>\n                                    <span>\n                                        <a href={item.recipe.shareAs} rel=\"noreferrer\" target=\"_blank\">{item.recipe.label}</a>\n                                    </span>\n                                    <p className=\"cal-info p-2\">{Math.round(item.recipe.calories)} Calories | {item.recipe.ingredients.length} Ingredients</p>\n                                    <span>\n                                        <a href={item.recipe.url} rel=\"noreferrer\" target=\"_blank\">{domain.hostname}</a>\n                                    </span>\n                                </div>\n                            );\n                        })}\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default RecipeList;","import RecipeList from \"./RecipeList.js\";\n\n/**\n * Search result component\n */\nfunction SearchResult(props) {\n\n    let content = null;\n    if (props.error.length > 0) {\n        content = <div className=\"alert alert-danger\">{props.error}</div>\n    } else {\n        if (props.search.length > 0 && props.response.hasOwnProperty(props.search)) {\n            if (props.response[props.search].count > 0) {\n                content = <RecipeList response={props.response[props.search]} />\n            } else {\n                content = <div className=\"alert alert-warning\">No recipe found.</div>\n            }\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"clearfix\"></div>\n            <div className=\"justify-content-center mt-3\">\n                {content}\n            </div>\n        </div>\n    );\n}\n\nexport default SearchResult;","import React, { useState, useEffect } from \"react\";\nimport SearchBox from \"./SearchBox\";\nimport SearchResult from \"./SearchResult\";\nrequire('dotenv').config();\n\nconst data = require(\"./data.json\");\nconst apiUrl = 'https://api.edamam.com/search';\nvar queryStr;\nvar enocdedSearch = \"\";\nvar recipes = [];\n\n/**\n * Container component\n */\nfunction Container() {\n\n    const [state, setState] = useState({\n        search: \"\",\n        calorieTo: \"\",\n        calorieFrom: \"\",\n        timeTo: \"\",\n        timeFrom: \"\",\n        cuisineType: [],\n        mealType: [],\n        dishType: [],\n        health: [],\n        diet: [],\n        response: {},\n        error: \"\"\n    });\n\n    useEffect(() => {\n        if (state.search.length > 0) {\n            document.title = 'Recipe - ' + state.search;\n        }\n        prepareRequestParams();\n        // If response is not set then only call api\n        if (state.search.length > 0 && !state.response.hasOwnProperty(enocdedSearch)) {\n            getRecipes();\n        }\n        return () => {\n            return false;\n        }\n    });\n\n    /**\n     * Handle's the input params.\n     */\n    function handleInputChange(event) {\n        let { name, value } = event.target;\n\n        if (event.target.type === 'checkbox') {\n            let field = name.replace(/[[\\]']+/g, '');\n            let fieldsArr = ['cuisineType[]', 'mealType[]', 'dishType[]'];\n            if (fieldsArr.indexOf(name) !== -1) {\n                value = data[field][value];\n            }\n            if (event.target.checked) {\n                state[field].push(value);\n                setState(prevState => ({ ...prevState, [field]: [...state[field]] }));\n            } else {\n                let index = state[field].indexOf(value);\n                if (index !== -1) {\n                    state[field].splice(index, 1);\n                    setState(prevState => ({ ...prevState, [field]: [...state[field]] }));\n                }\n            }\n        } else {\n            setState(prevState => ({ ...prevState, [name]: value }));\n        }\n        prepareRequestParams();\n    }\n\n    /**\n     * Handles the search button click.\n     */\n    function handleSearch() {\n        // If response is not set then only call api\n        if (!state.response.hasOwnProperty(enocdedSearch)) {\n            getRecipes();\n        }\n    }\n\n    /**\n     * Prepare's the request params & encodes it to cache the data\n     */\n    function prepareRequestParams() {\n        function appendParam(items, param) {\n            if (items.length > 0) {\n                for (let i = 0; i < items.length; i++) {\n                    queryStr += '&' + param + '=' + items[i].toLowerCase();\n                }\n            }\n        }\n\n        queryStr = '?q=' + state.search;\n        appendParam(state.cuisineType, 'cuisineType');\n        appendParam(state.mealType, 'mealType');\n        appendParam(state.dishType, 'dishType');\n        appendParam(state.health, 'health');\n        appendParam(state.diet, 'diet');\n        if (state.calorieTo > 0 && state.calorieFrom > 0) {\n            queryStr += '&calories=' + state.calorieTo + '-' + state.calorieFrom;\n        }\n        if (state.timeTo > 0 && state.timeFrom > 0) {\n            queryStr += '&time=' + state.timeTo + '-' + state.timeFrom;\n        }\n        enocdedSearch = btoa(queryStr);\n        queryStr += '&app_id=' + process.env.REACT_APP_APP_ID + '&app_key=' + process.env.REACT_APP_APP_KEY;\n    }\n\n    /**\n     * Fetches the recipes from api.\n     */\n    async function getRecipes() {\n        // Make api call\n        await fetch(apiUrl + queryStr,\n                {\n                    \"Cross-Origin -Embedder-Policy\": \"require-corp\",\n                    \"Cross-Origin-Opener-Policy\": \"same-origin\",\n                    \"Accept-Encoding\": \"gzip\"\n                }\n            )\n            .then(\n                response => response.json(),\n                err => setState(prevState => ({ ...prevState, error: \"Error: \" + err }))\n            )\n            .then((result) => {\n                // Store upto 5 results in state\n                recipes = state.response;\n                if (Object.keys(recipes).length >= 5) {\n                    let firstKey = Object.keys(recipes)[0];\n                    delete recipes[firstKey];\n                }\n                recipes[enocdedSearch] = result;\n                setState(prevState => ({ ...prevState, response: recipes }));\n            });\n    }\n\n    return (\n        <div className=\"container\">\n            <SearchBox handleInputChange={handleInputChange} handleSearch={handleSearch} />\n            <SearchResult response={state.response} error={state.error} search={enocdedSearch}/>\n        </div>\n    );\n}\n\nexport default Container;","import './css/App.css';\nimport './css/bootstrap.min.css';\nimport Container from \"./Container\";\n\n/**\n * Loads the App\n */\nfunction App() {\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                Recipe Search\n            </header>\n            <Container/>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nserviceWorker.register();\n"],"sourceRoot":""}